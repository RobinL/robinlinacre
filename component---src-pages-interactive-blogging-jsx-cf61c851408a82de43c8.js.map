{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/AwaitValue.js","webpack:///./node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js","webpack:///./node_modules/@babel/runtime/helpers/esm/AsyncGenerator.js","webpack:///./node_modules/@robinl/interactive-blogging-with-observable-notebooks-and-gatsb/30c5bf135cab7285@518.js","webpack:///./node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js","webpack:///./src/pages/interactive_blogging.jsx"],"names":["_AwaitValue","value","this","wrapped","_awaitAsyncGenerator","AsyncGenerator","gen","front","back","resume","key","arg","result","wrappedAwait","Promise","resolve","then","settle","done","err","type","reject","next","_invoke","request","undefined","_templateObject12","data","_templateObject11","_templateObject10","_templateObject9","_templateObject8","_templateObject7","_templateObject6","_templateObject5","_templateObject4","_templateObject3","_templateObject2","_templateObject","define","runtime","observer","main","module","variable","md","fn","_ref","mark","_callee","Promises","html","d3","i","text","message","span","current_message","current_spans","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_span","v","wrap","_context","prev","length","delay","substr","style","color","interpolateViridis","setAttribute","innerHTML","firstChild","children","Symbol","iterator","getAttribute","toggleAttribute","hasAttribute","t0","finish","stop","apply","arguments","_x","_x2","_x3","require","asyncIterator","prototype","frontmatter","title","post_date","code_url","post_type","post_category","output_order","post_frontmatter"],"mappings":"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","file":"component---src-pages-interactive-blogging-jsx-cf61c851408a82de43c8.js","sourcesContent":["export default function _AwaitValue(value) {\n  this.wrapped = value;\n}","import AwaitValue from \"./AwaitValue\";\nexport default function _awaitAsyncGenerator(value) {\n  return new AwaitValue(value);\n}","import AwaitValue from \"./AwaitValue\";\nexport default function AsyncGenerator(gen) {\n  var front, back;\n\n  function send(key, arg) {\n    return new Promise(function (resolve, reject) {\n      var request = {\n        key: key,\n        arg: arg,\n        resolve: resolve,\n        reject: reject,\n        next: null\n      };\n\n      if (back) {\n        back = back.next = request;\n      } else {\n        front = back = request;\n        resume(key, arg);\n      }\n    });\n  }\n\n  function resume(key, arg) {\n    try {\n      var result = gen[key](arg);\n      var value = result.value;\n      var wrappedAwait = value instanceof AwaitValue;\n      Promise.resolve(wrappedAwait ? value.wrapped : value).then(function (arg) {\n        if (wrappedAwait) {\n          resume(\"next\", arg);\n          return;\n        }\n\n        settle(result.done ? \"return\" : \"normal\", arg);\n      }, function (err) {\n        resume(\"throw\", err);\n      });\n    } catch (err) {\n      settle(\"throw\", err);\n    }\n  }\n\n  function settle(type, value) {\n    switch (type) {\n      case \"return\":\n        front.resolve({\n          value: value,\n          done: true\n        });\n        break;\n\n      case \"throw\":\n        front.reject(value);\n        break;\n\n      default:\n        front.resolve({\n          value: value,\n          done: false\n        });\n        break;\n    }\n\n    front = front.next;\n\n    if (front) {\n      resume(front.key, front.arg);\n    } else {\n      back = null;\n    }\n  }\n\n  this._invoke = send;\n\n  if (typeof gen[\"return\"] !== \"function\") {\n    this[\"return\"] = undefined;\n  }\n}\n\nif (typeof Symbol === \"function\" && Symbol.asyncIterator) {\n  AsyncGenerator.prototype[Symbol.asyncIterator] = function () {\n    return this;\n  };\n}\n\nAsyncGenerator.prototype.next = function (arg) {\n  return this._invoke(\"next\", arg);\n};\n\nAsyncGenerator.prototype[\"throw\"] = function (arg) {\n  return this._invoke(\"throw\", arg);\n};\n\nAsyncGenerator.prototype[\"return\"] = function (arg) {\n  return this._invoke(\"return\", arg);\n};","import _regeneratorRuntime from \"/home/runner/work/robinlinacre/robinlinacre/node_modules/@babel/runtime/regenerator\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _taggedTemplateLiteral from \"/home/runner/work/robinlinacre/robinlinacre/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _awaitAsyncGenerator from \"/home/runner/work/robinlinacre/robinlinacre/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator\";\nimport _wrapAsyncGenerator from \"/home/runner/work/robinlinacre/robinlinacre/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator\";\n\nfunction _templateObject12() {\n  var data = _taggedTemplateLiteral([\"## mdx\\n\\nAnother good option within the gatsby ecosystem for authoring interactive pages is mdx.  This is an excellent choice if you want to, for instance, write a blog post in markdown [like this](https://robinl.github.io/robinlinacre/my_mdx_page) but add a vega lite chart.\\n\\nYou can find an example of a component that renders mdx [here](https://github.com/RobinL/robinlinacre/blob/c375c64428bad3021c90594e5d976dc31080de83/src/pages/my_mdx_page.jsx#L1), an `mdx` page that includes a vega lite chart [here](https://github.com/RobinL/robinlinacre/blob/c375c64428bad3021c90594e5d976dc31080de83/src/mdx/first_post.mdx) and a pull request that adds code syntax highlighting for these pages [here](https://github.com/RobinL/robinlinacre/pull/18/files).\\n\\n\"], [\"## mdx\\n\\nAnother good option within the gatsby ecosystem for authoring interactive pages is mdx.  This is an excellent choice if you want to, for instance, write a blog post in markdown [like this](https://robinl.github.io/robinlinacre/my_mdx_page) but add a vega lite chart.\\n\\nYou can find an example of a component that renders mdx [here](https://github.com/RobinL/robinlinacre/blob/c375c64428bad3021c90594e5d976dc31080de83/src/pages/my_mdx_page.jsx#L1), an \\\\`mdx\\\\` page that includes a vega lite chart [here](https://github.com/RobinL/robinlinacre/blob/c375c64428bad3021c90594e5d976dc31080de83/src/mdx/first_post.mdx) and a pull request that adds code syntax highlighting for these pages [here](https://github.com/RobinL/robinlinacre/pull/18/files).\\n\\n\"]);\n\n  _templateObject12 = function _templateObject12() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject11() {\n  var data = _taggedTemplateLiteral([\"## Authoring workflow\\n\\nOnce all this is set up, the authoring process is very simple:\\n\\n**Step 1 - author your notebook and get the link**\\n\\nWrite an observable notebook, and publish it. Click the 'download code' button to get a link to the javascript module.  In the case of [this post](https://observablehq.com/@robinl/interactive-blogging-with-observable-notebooks-and-gatsb), the link to the code is `https://api.observablehq.com/@robinl/interactive-blogging-with-observable-notebooks-and-gatsb.tgz?v=3`.  \\n\\n**Step 2 - yarn add the notebook to gatsby**\\n\\nIn your gatsby website, install the notebook using \\n\\n```sh\\nyarn add https://api.observablehq.com/@robinl/interactive-blogging-with-observable-notebooks-and-gatsb.tgz?v=3\\n```\\n\\n**Step 3 - create a new page**\\n\\nCreate a new page in your gatsby `src/pages/` directory called, say `interactive_blogging.jsx`.\\n\\nAdd the following boilerplate:\\n\\n```js\\nimport define from \\\"@robinl/interactive-blogging-with-observable-notebooks-and-gatsb\\\"\\nimport ObservablePage from \\\"../components/obs_page\\\"\\n\\nexport default ({ data }) => (\\n    ObservablePage(define)\\n)\\n```\\n\\n\\nThat's it!\\n\\nTo update a page is even easier - you just retrieve the version number of the notebook from 'history' page with the Observable notebook, and manually update the `yarn.lock` file with the new version number. See [here](https://github.com/RobinL/robinlinacre/commit/ad9255cc57cecfeaf3a93f6b8c9707abad558686) for an example.\\n\\n\\nYou can find an example of all the code you need to add a page [here](https://github.com/RobinL/robinlinacre/pull/19), which is the pull request that created the page you're reading right now!\\n\\n\"], [\"## Authoring workflow\\n\\nOnce all this is set up, the authoring process is very simple:\\n\\n**Step 1 - author your notebook and get the link**\\n\\nWrite an observable notebook, and publish it. Click the 'download code' button to get a link to the javascript module.  In the case of [this post](https://observablehq.com/@robinl/interactive-blogging-with-observable-notebooks-and-gatsb), the link to the code is \\\\`https://api.observablehq.com/@robinl/interactive-blogging-with-observable-notebooks-and-gatsb.tgz?v=3\\\\`.  \\n\\n**Step 2 - yarn add the notebook to gatsby**\\n\\nIn your gatsby website, install the notebook using \\n\\n\\\\`\\\\`\\\\`sh\\nyarn add https://api.observablehq.com/@robinl/interactive-blogging-with-observable-notebooks-and-gatsb.tgz?v=3\\n\\\\`\\\\`\\\\`\\n\\n**Step 3 - create a new page**\\n\\nCreate a new page in your gatsby \\\\`src/pages/\\\\` directory called, say \\\\`interactive_blogging.jsx\\\\`.\\n\\nAdd the following boilerplate:\\n\\n\\\\`\\\\`\\\\`js\\nimport define from \\\"@robinl/interactive-blogging-with-observable-notebooks-and-gatsb\\\"\\nimport ObservablePage from \\\"../components/obs_page\\\"\\n\\nexport default ({ data }) => (\\n    ObservablePage(define)\\n)\\n\\\\`\\\\`\\\\`\\n\\n\\nThat's it!\\n\\nTo update a page is even easier - you just retrieve the version number of the notebook from 'history' page with the Observable notebook, and manually update the \\\\`yarn.lock\\\\` file with the new version number. See [here](https://github.com/RobinL/robinlinacre/commit/ad9255cc57cecfeaf3a93f6b8c9707abad558686) for an example.\\n\\n\\nYou can find an example of all the code you need to add a page [here](https://github.com/RobinL/robinlinacre/pull/19), which is the pull request that created the page you're reading right now!\\n\\n\"]);\n\n  _templateObject11 = function _templateObject11() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteral([\"## Continuous deployment\\n\\nI use Github actions for continuous deployment.  Specifically, any commits merged into dev trigger a workflow which builds the site, and pushes it to master, thus making it available as a github page.\\n\\nYou can see the action [here](https://github.com/RobinL/gasby_observable_blog/blob/dev/.github/workflows/main.yml).  Note you will need to generate a secret containing a [Github PAT](https://help.github.com/en/articles/creating-a-personal-access-token-for-the-command-line) and add it to your repo's secrets.  The enables the workflow to commit code back to your repo.\\n\"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\"## Rendering notebooks in gatsby\\n\\nI use a React component to display each Observable notebook within a div - see [here](https://github.com/RobinL/gasby_observable_blog/blob/dev/src/components/observable_div.jsx) for the implementation.  \\n\\nI then have an [page component](https://github.com/RobinL/gasby_observable_blog/blob/dev/src/components/obs_page.js) that serves as a default layout for each page on my website which contains a notebook.  \\n\\nEach notebook is a standard gatsby page which imports the Observable notebook, and then passes it to the page component.  [Here's](https://github.com/RobinL/gasby_observable_blog/blob/dev/src/pages/gatsby-test-2.js) an example.   `output_order` allows the author to control which cells are displayed and in what order.\\n\\nFor a long time I experimented with the idea of loading all notebooks from a json file, and then using createPage (e.g. like  [this](https://github.com/RobinL/gasby_observable_blog/blob/14537c158c2c729cb985a56c5acc5d292c958379/gatsby-node.js#L25) to create the pages,  rather than needing a separate `jsx` page for each notebook.  The json would look like this:\\n\\n```json\\n[\\n    {   \\\"page_path\\\": \\\"page1\\\",\\n        \\\"observable_note_name\\\": \\\"gatsby-test\\\"\\n    },\\n    {   \\n        \\\"page_path\\\": \\\"page2\\\",\\n        \\\"observable_note_name\\\": \\\"gatsby-test-2\\\",\\n        \\\"output_order\\\": [\\\"cell1\\\", \\\"cell2\\\"]\\n    }\\n]\\n```\\n\\nI now don't think this is possible, because of the way webpack works.  See [here](https://stackoverflow.com/questions/58011164/dynamic-module-import-in-component-for-gatsby-js-site).\\n\\n\"], [\"## Rendering notebooks in gatsby\\n\\nI use a React component to display each Observable notebook within a div - see [here](https://github.com/RobinL/gasby_observable_blog/blob/dev/src/components/observable_div.jsx) for the implementation.  \\n\\nI then have an [page component](https://github.com/RobinL/gasby_observable_blog/blob/dev/src/components/obs_page.js) that serves as a default layout for each page on my website which contains a notebook.  \\n\\nEach notebook is a standard gatsby page which imports the Observable notebook, and then passes it to the page component.  [Here's](https://github.com/RobinL/gasby_observable_blog/blob/dev/src/pages/gatsby-test-2.js) an example.   \\\\`output_order\\\\` allows the author to control which cells are displayed and in what order.\\n\\nFor a long time I experimented with the idea of loading all notebooks from a json file, and then using createPage (e.g. like  [this](https://github.com/RobinL/gasby_observable_blog/blob/14537c158c2c729cb985a56c5acc5d292c958379/gatsby-node.js#L25) to create the pages,  rather than needing a separate \\\\`jsx\\\\` page for each notebook.  The json would look like this:\\n\\n\\\\`\\\\`\\\\`json\\n[\\n    {   \\\"page_path\\\": \\\"page1\\\",\\n        \\\"observable_note_name\\\": \\\"gatsby-test\\\"\\n    },\\n    {   \\n        \\\"page_path\\\": \\\"page2\\\",\\n        \\\"observable_note_name\\\": \\\"gatsby-test-2\\\",\\n        \\\"output_order\\\": [\\\"cell1\\\", \\\"cell2\\\"]\\n    }\\n]\\n\\\\`\\\\`\\\\`\\n\\nI now don't think this is possible, because of the way webpack works.  See [here](https://stackoverflow.com/questions/58011164/dynamic-module-import-in-component-for-gatsby-js-site).\\n\\n\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"## Gastby.js as a site generator\\n\\nGatsby js is a modern website generator that uses the React framework.  Javascript modules can be installed as dependencies, and used within pages on your website.  \\n\\nThis is a good fit because each Observable notebook can be compiled and downloaded as a JavaScript module - see [here](https://observablehq.com/@observablehq/downloading-and-embedding-notebooks) - and so can be installed and made available as a part of a Gatsby site.\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"This website contains a variety of interactive content like my [energy usage calculator](https://robinl.github.io/robinlinacre/energy-usage) which I can create easily and host for free.  In this post I explain how the it all works.\\n\\n## Observable notebooks\\n\\nI use [Observable Notebooks](https://observablehq.com) as the authoring environment for interactive content.  This is my favourite programming environment because it allows me to [maximise the time I spend on the fun part of programming](https://observablehq.com/@tmcw/why-observable-for-people-who-already-have-a-text-editor).\\n\\nThis allows readers to not only view the code behind each page ([including this one!](https://observablehq.com/@robinl/interactive-blogging-with-observable-notebooks-and-gatsb)), but also to live-edit it and fork it.  On the [Observable Notebooks](https://observablehq.com) homepage, you can see that the ability to reuse, re-mix and iterate leads to an amazing amount of creativity.\\n\\nI then use [gatsby.js](gatsbyjs.org) to build my notebooks into a website.  \\n\\nThe idea is that you end up with the best of all worlds:  A fun, simple authoring environment with unlimited power for interactivity, which can be hosted for free on a static web host like Github pages.\\n\\nWhat follows are a few notes about how I got everything working.  If you'd rather jump straight into the code, you can find a minimal, working template [here](https://github.com/robinl/gasby_observable_blog/), and the code for my blog is [here](https://github.com/robinl/robinlinacre).\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"<h1>\", \"</h1>\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"<h1>\", \"</h1>\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\", \"\", \"\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"<span>\", \"\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"<span>\", \"</span>\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"# Interactive blogging with Observable Notebooks and gatsby.js\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n// https://observablehq.com/@robinl/interactive-blogging-with-observable-notebooks-and-gatsb@518\nexport default function define(runtime, observer) {\n  var main = runtime.module();\n  main.variable(observer()).define([\"md\"], function (md) {\n    return md(_templateObject());\n  });\n  main.variable(observer(\"message\")).define(\"message\", [\"Promises\", \"html\", \"d3\"],\n  /*#__PURE__*/\n  function () {\n    var _ref = _wrapAsyncGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(Promises, html, d3) {\n      var i, text, message, span, current_message, current_spans, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _span, v;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              i = 0;\n              text = \"Interactive blogging with Observable Notebooks and gatsby.js\";\n\n            case 2:\n              if (!(i < text.length)) {\n                _context.next = 15;\n                break;\n              }\n\n              _context.next = 5;\n              return _awaitAsyncGenerator(Promises.delay(40));\n\n            case 5:\n              span = html(_templateObject2(), text.substr(i, 1));\n              span.style.color = d3.interpolateViridis(i / text.length);\n              span.setAttribute(\"value\", i);\n              span.setAttribute(\"ascending\", \"ascending\");\n\n              if (i == 0) {\n                message = html(_templateObject3(), span);\n              } else {\n                message = html(_templateObject4(), message.innerHTML, span);\n              }\n\n              i = i + 1;\n              _context.next = 13;\n              return html(_templateObject5(), message);\n\n            case 13:\n              _context.next = 2;\n              break;\n\n            case 15:\n              if (!(i >= text.length)) {\n                _context.next = 44;\n                break;\n              }\n\n              _context.next = 18;\n              return _awaitAsyncGenerator(Promises.delay(100));\n\n            case 18:\n              current_message = html(_templateObject6(), message);\n              current_spans = current_message.firstChild.children;\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _iteratorError = undefined;\n              _context.prev = 23;\n\n              for (_iterator = current_spans[Symbol.iterator](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                _span = _step.value;\n                v = +_span.getAttribute(\"value\");\n\n                if (v == text.length | v == -1) {\n                  _span.toggleAttribute(\"ascending\");\n                }\n\n                _span.hasAttribute(\"ascending\") ? v-- : v++;\n\n                _span.setAttribute(\"value\", v);\n\n                _span.style.color = d3.interpolateViridis(v / text.length); // span.style.fontSize = Math.sin(v / 10) + 20 + \"px\";\n              }\n\n              _context.next = 31;\n              break;\n\n            case 27:\n              _context.prev = 27;\n              _context.t0 = _context[\"catch\"](23);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n\n            case 31:\n              _context.prev = 31;\n              _context.prev = 32;\n\n              if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n                _iterator[\"return\"]();\n              }\n\n            case 34:\n              _context.prev = 34;\n\n              if (!_didIteratorError) {\n                _context.next = 37;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 37:\n              return _context.finish(34);\n\n            case 38:\n              return _context.finish(31);\n\n            case 39:\n              i = i + 1;\n              _context.next = 42;\n              return current_message;\n\n            case 42:\n              _context.next = 15;\n              break;\n\n            case 44:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[23, 27, 31, 39], [32,, 34, 38]]);\n    }));\n\n    return function (_x, _x2, _x3) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n  main.variable(observer(\"md1\")).define(\"md1\", [\"md\"], function (md) {\n    return md(_templateObject7());\n  });\n  main.variable(observer(\"md2\")).define(\"md2\", [\"md\"], function (md) {\n    return md(_templateObject8());\n  });\n  main.variable(observer(\"md3\")).define(\"md3\", [\"md\"], function (md) {\n    return md(_templateObject9());\n  });\n  main.variable(observer(\"md4\")).define(\"md4\", [\"md\"], function (md) {\n    return md(_templateObject10());\n  });\n  main.variable(observer(\"md5\")).define(\"md5\", [\"md\"], function (md) {\n    return md(_templateObject11());\n  });\n  main.variable(observer(\"md6\")).define(\"md6\", [\"md\"], function (md) {\n    return md(_templateObject12());\n  });\n  main.variable(observer(\"d3\")).define(\"d3\", [\"require\"], function (require) {\n    return require(\"d3\");\n  });\n  return main;\n}","import AsyncGenerator from \"./AsyncGenerator\";\nexport default function _wrapAsyncGenerator(fn) {\n  return function () {\n    return new AsyncGenerator(fn.apply(this, arguments));\n  };\n}","import React from \"react\"\nimport define from \"@robinl/interactive-blogging-with-observable-notebooks-and-gatsb\"\nimport ObsMdxPage from \"../components/mdx_obs_page\"\n\nexport const frontmatter = {\n  title: \"Interactive blogging with Observable Notebooks and gatsby.js\",\n  post_date: \"2019-10-11\",\n  code_url:\n    \"https://observablehq.com/@robinl/interactive-blogging-with-observable-notebooks-and-gatsb\",\n  post_type: \"obs\",\n  post_category: \"data\",\n}\n\nlet output_order = [\"message\", \"md1\", \"md2\", \"md3\", \"md4\", \"md5\", \"md6\"]\n\nexport default ({ data }) => (\n  <ObsMdxPage\n    define={define}\n    output_order={output_order}\n    post_frontmatter={frontmatter}\n  />\n)\n"],"sourceRoot":""}